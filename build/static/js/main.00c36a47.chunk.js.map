{"version":3,"sources":["components/Filter.js","components/PersonForm.js","components/Person.js","components/Persons.js","services/personService.js","components/Notification.js","App.js","index.js"],"names":["Filter","props","value","newFilter","onChange","filter","PersonForm","onSubmit","addPerson","newName","handleNewName","newNumber","handleNewNumber","type","Person","name","number","Persons","persons","person","toLowerCase","startsWith","map","onClick","deletePerson","baseUrl","axios","get","then","response","data","newPerson","post","id","delete","updatedData","put","Notification","message","className","messageClass","App","useState","setPersons","setNewName","setNewNumber","setNewFilter","newMessage","setNewMessage","useEffect","personService","allpersons","handleMessage","text","setTimeout","event","target","preventDefault","personId","x","length","window","confirm","returnedData","catch","error","returnedPerson","concat","console","log","returned","existing","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.00c36a47.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Filter = (props) => {\r\n    return(\r\n    <div>filter shown with <input value={props.newFilter} onChange={props.filter} /></div>\r\n    )\r\n}\r\n\r\nexport default Filter;","import React from 'react';\r\n\r\nconst PersonForm = (props) => {\r\n    return(\r\n        <div>\r\n            <form onSubmit={props.addPerson}>\r\n                <div> name: <input value={props.newName} onChange ={props.handleNewName}/></div>\r\n                <div> number: <input value={props.newNumber} onChange ={props.handleNewNumber}/></div>\r\n                <div>\r\n                <button type=\"submit\">add</button>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\nexport default PersonForm;","import React from 'react';\r\n\r\nconst Person = (props) => {\r\n    return(\r\n     <span>{props.name} {props.number} </span>\r\n    )\r\n}\r\n\r\nexport default Person;\r\n","import React from 'react';\r\nimport Person from './Person';\r\n\r\nconst Persons = (props) => {\r\n    return(\r\n        <div>      \r\n            {props.persons.filter(person => person.name.toLowerCase().startsWith(props.newFilter.toLowerCase())).map(person => {\r\n                return(\r\n                    <div  key ={person.name}>\r\n                        <Person name={person.name} number={person.number} />\r\n                        <button onClick ={() => props.deletePerson(person)}>delete</button>\r\n                    </div>\r\n                )\r\n            })}\r\n        </div>\r\n    )\r\n}\r\n\r\n export default Persons;","import axios from 'axios';\r\nconst baseUrl = '/api/persons';\r\n\r\nconst getAll = () => {\r\n    const request = axios.get(baseUrl);\r\n    return request.then(response => response.data);\r\n}\r\n\r\nconst addNewPerson = (newPerson) => {\r\n    const request = axios.post(baseUrl, newPerson);\r\n    return request.then(response => response.data);\r\n}\r\n\r\nconst deletePerson = (id) => {\r\n    const request = axios.delete(`${baseUrl}/${id}`);\r\n    return request.then(response => response.data);\r\n}\r\n\r\nconst updateNumber = (id, updatedData) => {\r\n    const request = axios.put(`${baseUrl}/${id}`, updatedData);\r\n    return request.then(response => response.data);\r\n}\r\n\r\nexport default {getAll, addNewPerson, deletePerson, updateNumber}","const Notification = ({ message }) => {\r\n    if (message === null) {\r\n        return null\r\n    }\r\n\r\n    return (\r\n        <div className={message.messageClass}>\r\n            {message.message}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Notification;","import React, { useEffect, useState } from 'react';\nimport Filter from './components/Filter.js';\nimport PersonForm from './components/PersonForm.js';\nimport Persons from './components/Persons.js';\nimport personService from './services/personService.js';\nimport Notification from './components/Notification.js';\n\n\nconst App = () => {\n  const [ persons, setPersons ] = useState([])\n  const [ newName, setNewName ] = useState('')\n  const [ newNumber, setNewNumber ] = useState('')\n  const [ newFilter, setNewFilter ] = useState('')\n  const [ newMessage, setNewMessage ] = useState({message:'', messageClass:''});\n\n  useEffect(() => {\n    personService.getAll()\n    .then(allpersons => {\n      setPersons(allpersons)\n    })\n  }, [])\n\n  const handleNewName = (event) => {\n  setNewName(event.target.value)\n  }\n\n  const handleNewNumber = (event) => {\n    setNewNumber(event.target.value)\n  }\n\n  const filter = (event) => {\n    setNewFilter(event.target.value);\n  }\n  \n  const handleMessage = (text, messageClass) => {\n  const newMessage = {\n      message: text,\n      messageClass: messageClass\n    }\n\n    setNewMessage(newMessage);\n    setTimeout(() => {\n      setNewMessage(null)\n    }, 5000)\n  }\n\n  const addPerson = (event) => {\n    event.preventDefault();\n\n    var personId = persons.filter(x => x.name.toLowerCase() === newName.toLowerCase()).map(x => x.id);\n    if(personId.length >0) {\n      if(window.confirm(`${newName} is already added to phonebook, replace the old number with a new one?`)){\n        const updatedData = {\n          name: newName,\n          number : newNumber\n        }\n        personService.updateNumber(personId[0], updatedData)\n        .then(returnedData => {\n          setPersons(persons.map(person => person.id !== personId[0] ? person : returnedData));\n          handleMessage(`Updated number for ${returnedData.name}`, 'success');\n        }).catch(error => {\n          handleMessage(`Something went wrong. Could not update number for ${newName}. err: ${error.response.data}`, 'error')\n        })\n      }\n        setNewName(\"\");\n        setNewNumber(\"\");\n    }\n\n    else{\n      const person = {\n        name: newName,\n        number: newNumber\n      }\n      personService.addNewPerson(person)\n      .then(returnedPerson => {\n        setPersons(persons.concat(returnedPerson));\n        handleMessage(`Added ${returnedPerson.name}`, 'success');\n        setNewName(\"\");\n        setNewNumber(\"\");\n      }).catch(error => {\n          console.log(error.response.data)\n        handleMessage(`Something went wrong. Could not add ${newName}. err: ${error.response.data}`, 'error')\n      })\n    }\n  }\n\nconst deletePerson = (person) => {\n  if(window.confirm(`Delete ${person.name}?`)){\n    personService.deletePerson(person.id)\n      .then(returned => {\n        setPersons(persons.filter(existing => existing.id !== person.id));\n        handleMessage(`Removed ${person.name}`, 'success');\n      }).catch(error => {\n        console.log(error.response.data)\n        handleMessage(`Something went wrong. Could not remove ${person.name}. err: ${error.response.data}`, 'error')\n      })\n  }\n}\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification message ={newMessage} />\n      <Filter newFilter={newFilter} filter={filter} />\n      <h2>Add a new </h2>\n      <PersonForm newName={newName} newNumber={newNumber} addPerson={addPerson} handleNewName={handleNewName} handleNewNumber={handleNewNumber} />\n      <h2>Numbers</h2>\n      <Persons persons={persons} newFilter={newFilter} deletePerson ={deletePerson} />\n    </div>\n  )\n}\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\n\nReactDOM.render(\n  <App />, \n  document.getElementById('root')\n)\n\n"],"sourceRoot":""}